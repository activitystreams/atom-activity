<?xml version="1.0" encoding="US-ASCII"?>
<?xml-stylesheet type='text/xsl' href='./rfc2629.xslt' ?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc tocompact="yes"?>
<?rfc tocdepth="3"?>
<?rfc tocindent="yes"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes"?>
<?rfc comments="yes"?>
<?rfc inline="yes"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>
<?rfc private="Activity Streams Working Group"?>
<rfc docName="atom-activity-10">
  <front>
    <title abbrev="AtomActivity">Atom Activity Extensions 1.0</title>

    <author fullname="Martin Atkins" initials="M." surname="Atkins">
      <organization>Six Apart</organization>
    </author>

    <author fullname="Will Norris" initials="W." surname="Norris">
      <organization>Google</organization>
    </author>

    <author fullname="Chris Messina" initials="C." surname="Messina">
      <organization>Citizen Agency, Google</organization>
    </author>

    <author fullname="Monica Wilkinson" initials="M." surname="Wilkinson">
      <organization>MySpace, Facebook, Socialcast</organization>
    </author>

    <author fullname="Rob Dolin" initials="R." surname="Dolin">
      <organization>Microsoft</organization>
    </author>

    <date day="20" month="September" year="2010" />

    <abstract>
      <t>This document presents an extension that allows activities on social
      objects to be expressed within the Atom Syndication Format.</t>
    </abstract>

    <note title="Requirements Language">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
      document are to be interpreted as described in <xref
      target="RFC2119"></xref>.</t>
    </note>
  </front>

  <middle>
    <section anchor="introduction" title="Introduction">
      <t>The Atom Syndication Format, as defined in <xref
      target="RFC4287"></xref>, is widely used to transmit various types of
      web content such as weblog posts, news headlines, as well as user
      activities within social sites. In the case of user activities, Atom
      lacks the ability to express much of the activity-specific metadata in a
      machine-parseable format. Activity Streams is an XML format designed to
      allow this additional activity metadata to be expressed within existing
      Atom entries and feeds.</t>

      <t>It is a goal of this specification to provide sufficient metadata
      about an activity such that a consumer of the data can present it to a
      user in a rich human-friendly format. This may include constructing
      readable sentences about the activity that occurred, visual
      representations of the activity, or combining similar activities for
      display.</t>
    </section>

    <section anchor="conventions" title="Notational Conventions">
      <t>This document refers to elements in a number of XML namespaces as
      defined in <xref target="xml-names"></xref>. For brevity, these elements
      shall be referred to using prefixes rather than their full namespace
      URIs. The aliases used within this document are listed in the following
      table. The choices of namespace prefix are arbitrary and are not
      semantically significant.</t>

      <texttable>
        <ttcol>Alias</ttcol>

        <ttcol>Namespace URI</ttcol>

        <ttcol>Specification</ttcol>

        <c><spanx style="verb">atom:</spanx></c>

        <c><spanx style="verb">http://www.w3.org/2005/Atom</spanx></c>

        <c><xref target="RFC4287">The Atom Syndication Format</xref></c>

        <c><spanx style="verb">activity:</spanx></c>

        <c><spanx style="verb">http://activitystrea.ms/spec/1.0/</spanx></c>

        <c>Atom Activity Extensions</c>
      </texttable>

      <t>This specification uses a shorthand form of terms from the XML
      Infoset <xref target="xml-infoset"></xref>. The phrase "Information
      Item" is omitted when naming element and attribute information items.
      Therefore, when this specification uses the term "element," it is
      referring to an element information item in infoset terms. Likewise,
      when this specification uses the term "attribute," it is referring to an
      attribute information item.</t>

      <t>This specification allows the use of IRIs <xref
      target="RFC3987"></xref>. Every URI <xref target="RFC3986"></xref> is
      also an IRI, so a URI may be used wherever an IRI is named. When an IRI
      that is not also a URI is given for dereferencing, it MUST be mapped to
      a URI using the steps in Section 3.1 of <xref target="RFC3987"></xref>.
      When an IRI is serving as an identifier, it MUST NOT be so mapped.</t>

      <t>The text of this specification provides the sole definition of
      conformance. Examples in this specification are non-normative.</t>

      <t>This specification uses "the Atom specification" to refer to <xref
      target="RFC4287"></xref>.</t>
    </section>

    <section anchor="concepts" title="Activity Concepts">
      <t>In its simplest form, an activity consists of an actor, a verb, and
      an object. It tells the story of a person performing an action on or
      with an object -- "Geraldine posted a photo" or "John shared a video".
      In most cases these elements will be explicitly declared, but they may
      also be implied.</t>

      <section anchor="activity" title="The Activity Construct">
        <t>An activity consists of the following logical components:</t>

        <section anchor="activity.time" title="Time">
          <t>A Date Construct, as defined in section 3.3 of <xref
          target="RFC4287"></xref>, that identifies the time at which the
          activity occurred. It is important to note that this is not
          necessarily the same as the time at which the activity was
          published. An Activity construct MUST have exactly one Time
          value.</t>
        </section>

        <section anchor="activity.actor" title="Actor">
          <t>An <xref target="object">Object Construct</xref> that identifies
          the entity that performed the activity. An Activity construct MUST
          have exactly one actor.</t>
        </section>

        <section anchor="activity.verb" title="Verb">
          <t>A URI value that identifies the action of the activity.  This URI
          MUST be an absolute URI, or a URI relative to the base URI of
          <spanx style="verb">http://activitystrea.ms/schema/1.0/</spanx>.  An
          Activity construct MUST have exactly one verb.</t>
        </section>

        <section anchor="activity.object" title="Object">
          <t>This <xref target="object">Object Construct</xref> identifies the
          primary object of the activity. An Activity construct MUST have
          exactly one object.</t>
        </section>

        <section anchor="activity.target" title="Target">
          <t>The target of an activity is an <xref target="object">Object
          Construct</xref> that represents the object to which the activity
          was performed. The exact meaning of an activity's target is
          dependent on the verb of the activity, but will often be the object
          of the English preposition "to". For example, in the activity "John
          saved a movie to his wishlist", the target of the activity is
          "wishlist". The activity target MUST NOT be used to identify an
          indirect object that is not a target of the activity. An Activity
          construct MAY have a target but it MUST NOT have more than one.</t>
        </section>

        <section anchor="activity.title" title="Title">
          <t>An HTML representation of the natural language title for this
          activity. Consumers MAY use the value of this field, if set, as a
          fallback for when the provided verb is not recognized. An
          Activity Construct MAY have a title but it MUST NOT have more than
          one.</t>
        </section>

        <section anchor="activity.summary" title="Summary">
          <t>An HTML representation of a natural language describing this
          activity including visual elements such as thumbnails. Consumers MAY
          use the value of this field, if set, as a fallback for when
          the provided verb is not recognized. An Activity Construct MAY have a
          summary but it MUST NOT have more than one.</t>
        </section>
      </section>

      <section anchor="object" title="The Object Construct">
        <t>An object construct is a thing, real or imaginary, which
        participates in an activity. It may be the entity performing the
        activity, or the entity on which the activity was performed. An object
        consists of the logical components defined in the following sections.
        Certain object types may further refine the meaning of these
        components, or they may define additional components. If an object
        type defines an additional component then it SHOULD also define the
        representation of that component in one or more serialization
        formats.</t>

        <section anchor="object.id" title="ID">
          <t>The id of an object construct is an absolute URI that uniquely
          identifies the object. An Object construct SHOULD have exactly one
          ID value. If an object construct does not have an ID value consumers
          MAY use the <xref target="object.url">Permalink URL</xref> as
          a weaker identifier, but must in this case allow for the fact that
          Permalink URL is not defined to be unique across all objects and be
          prepared to handle duplicates.</t>
        </section>

        <section anchor="object.name" title="Name">
          <t>This string value provides a human readable display name for the
          object, if the object has a name. An Object construct MAY have a
          name, but MUST NOT have more than one.</t>
        </section>

        <section anchor="object.summary" title="Summary">
          <t>This string value provides a human readable description or
          summary of the Object. An Object construct MAY have a summary, but
          MUST NOT have more than one.</t>
        </section>

        <section anchor="object.image" title="Representative Image">
          <t>This URI value identifies an image resource which provides a visual
          representation of the object, intended for human consumption. An Object
          construct MAY have a representative image, but MUST NOT have more than
          one.</t>
        </section>

        <section anchor="object.url" title="Permalink URL">
          <t>This URI value identifies a resource which provides an HTML
          representation of the object. An Object construct MAY have a
          Permalink URL, but MUST NOT have more than one.</t>
        </section>

        <section anchor="object.type" title="Object Type">
          <t>A URI value that identifies the type of object.  This URI
          MUST be an absolute URI, or a URI relative to the base URI of
          <spanx style="verb">http://activitystrea.ms/schema/1.0/</spanx>.  An
          Object construct MAY have a type, but MUST NOT have more than one.</t>

          <t>If no object type is present, the object has no specific type.
          Consumers SHOULD refer to such objects only by their names. For
          example, when forming an activity sentence a consumer might say
          "Johan posted 'My Cat'" rather than "Johan posted a photo: 'My
          Cat'".</t>
        </section>
      </section>
    </section>

    <section anchor="atom" title="Atom Representation">
      <t>Activities can be represented in an Atom document using a combination
      of conventions and custom extension elements. This specification defines
      two ways that an activity can be represented using <spanx
      style="verb">atom:entry</spanx> elements, as a Full Activity Entry or
      using Implied Activity Shorthand.  Other specifications may define
      additional representations.</t>

      <section anchor="atom.activity"
               title="Activity represented as atom:entry">
        <t>Any valid Atom entry as defined by section 4.1.2 of <xref
        target="RFC4287"></xref> is a representation of an activity as defined
        in <xref target="activity"></xref>.</t>

        <t>If the atom:entry contains an
        <spanx style="verb">activity:object</spanx> element then it is a Full
        Activity Entry and MUST be interpreted as described in
        <xref target="atom.activity.full"></xref>. Otherwise the entry is an
        Implied Activity Shorthand Entry and MUST be interpreted as described
        in <xref target="atom.activity.implied"></xref>.</t>

        <section anchor="atom.activity.full" title="Full Activity Entry">
          <t>A Full Activity Entry is one in which the
          <spanx style="verb">atom:entry</spanx> represents the full
          <xref target="activity">Activity Construct</xref>.  The components of
          the activity are represented by child elements of the
          <spanx style="verb">atom:entry</spanx>.  In this section, "the entry"
          refers to the <spanx style="verb">atom:entry</spanx> element that
          represents the Full Activity Entry.</t>

          <t>The components of the Activity Construct are represented in a
          Full Activity Entry as follows:</t>

          <t><list style="hanging">
              <t hangText="Actor">The <xref target="activity.actor">Actor</xref>
              of the Activity Construct is represented by the
              <spanx style="verb">atom:author</spanx> element that
              applies to the entry, as defined by section 4.2.1 of <xref
              target="RFC4287"></xref>. The representation of an Object
              Construct as an <spanx style="verb">atom:author</spanx> element
              is defined in <xref target="atom.object.author"></xref>.</t>

              <t hangText="Object">The <xref target="activity.object">Object</xref>
              of the Activity Construct is represented by the
              <spanx style="verb">activity:object</spanx> child element of the entry,
              as defined in <xref target="xml.object"></xref>.</t>

              <t hangText="Target">The <xref target="activity.target">Target</xref>
              of the Activity Construct is represented by the
              <spanx style="verb">activity:target</spanx> child
              element of the entry, as defined in <xref
              target="xml.target"></xref>. If no such element is
              present, the Activity Construct has no Target.</t>

              <t hangText="Verb">The <xref target="activity.verb">verb
              IRI</xref> of the Activity Construct is represented by an <spanx
              style="verb">activity:verb</spanx> child element as defined in
              <xref target="xml.verb"></xref>. If the entry has no
              <spanx style="verb">activity:verb</spanx> child element, then
              the Activity Construct has the "Post" verb as defined in
              <xref target="post"></xref>.</t>

              <t hangText="Time">The <xref target="activity.time">Time</xref>
              of the Activity Construct is represented by the
              <spanx style="verb">atom:published</spanx> child element of the
              entry, as defined in section 4.2.9 of
              <xref target="RFC4287"></xref>.</t>

              <t hangText="Title">The <xref target="activity.title">Title</xref>
              of the Activity Construct is represented by the
              <spanx style="verb">atom:title</spanx> child element of the
              entry, as defined in section 3.2.1 of
              <xref target="RFC4287"></xref>.</t>

              <t hangText="Summary">The <xref target="activity.summary">Summary</xref>
              of the Activity Construct is represented by the
              <spanx style="verb">atom:content</spanx> child element of the
              entry, as defined in section 4.1.3 of
              <xref target="RFC4287"></xref>.</t>
            </list>
          </t>
        </section>

        <section anchor="atom.activity.implied"
                 title="Implied Activity Shorthand">
          <t>An implied activity shorthand entry represents an
          Activity Construct in terms of its object. In this mode, the <spanx
          style="verb">atom:entry</spanx> primarily represents the
          Object Construct that is the object of the Activity Construct, but
          also represents certain additional components of the Activity
          Construct. In this section, "the entry" refers to the <spanx
          style="verb">atom:entry</spanx> element.</t>

          <t>The components of the Activity Construct are represented in an
          Implied Activity Shorthand Entry as follows:</t>

          <t><list style="hanging">
              <t hangText="Actor">The <xref target="activity.actor">Actor</xref>
              of the Activity Construct is represented by the
              <spanx style="verb">atom:author</spanx> element that
              applies to the entry, as defined by section 4.2.1 of <xref
              target="RFC4287"></xref>. The representation of an Object
              Construct as an atom:author element is defined in <xref
              target="atom.object.author"></xref>.</t>

              <t hangText="Object">The <xref
              target="activity.object">Object</xref> of the Activity Construct
              is represented by the entry itself. The representation of an
              Object Construct as an <spanx style="verb">atom:entry</spanx>
              element uses the child elements defined in <xref
              target="atom.object.components"></xref>.</t>

              <t hangText="Target">The Activity Construct does not have a
              <xref target="activity.target">Target</xref>.</t>

              <t hangText="Verb">The <xref target="activity.verb">verb
              URI</xref> of the Activity Construct is represented by the <spanx
              style="verb">activity:verb</spanx> child element as defined in
              <xref target="xml.verb"></xref>. If the entry has no
              <spanx style="verb">activity:verb</spanx> child element, then
              the Activity Construct has the "Post" verb as defined in
              <xref target="post"></xref>.</t>

              <t hangText="Time">The <xref target="activity.time">Time</xref>
              of the Activity Construct is represented by the
              <spanx style="verb">atom:published</spanx> child element of the
              entry, as defined in section 4.2.9 of
              <xref target="RFC4287"></xref>.</t>

              <t hangText="Title">The Activity Construct does not have a <xref
              target="activity.title">Title</xref>.</t>

              <t hangText="Summary">The Activity Construct does not have a <xref
              target="activity.summary">Summary</xref>.</t>
            </list></t>

          <t>The Implied Activity Shorthand is an accommodation to allow
          activity metadata to be added to a feed that is
          considered by traditional Atom consumers to be a list of content
          objects rather than a list of activities, without changing the
          meaning of that feed. Such feeds can often be recognized
          by the fact that the <spanx style="verb">atom:title</spanx> element
          of each entry is the title of an object rather than a sentence
          describing an activity.</t>
        </section>
      </section>

      <section anchor="atom.object" title="Object Representations">
        <t><xref target="object">Object constructs</xref> are used to identify
        a number of different components in an activity, including the <xref
        target="activity.actor">Actor</xref> and <xref
        target="activity.target">Object</xref> of an activity, among others.
        Depending on what an object is used to identify, it is rendered in
        Atom using a different root element, as defined in <xref
        target="atom.object.elements"></xref>. The components of the object are
        represented using child elements as defined in <xref
        target="atom.object.components"></xref>.</t>

        <section anchor="atom.object.elements"
                 title="Object Construct Representations">
          <t>Object constructs can be represented using the following
          elements:</t>

          <t><list style="hanging">
              <t hangText="atom:entry">When used to describe the object of an
              Implied Activity as defined in <xref
              target="atom.activity.implied"></xref>, an Object Construct is
              represented using the <spanx style="verb">atom:entry</spanx>
              element, using the elements defined in <xref
              target="atom.object.components"></xref>.</t>

              <t hangText="atom:author">When used to describe the <xref
              target="activity.actor">Actor of an Activity Construct</xref>,
              an Object Construct is represented using the <spanx
              style="verb">atom:author</spanx> element, as defined in <xref
              target="atom.object.author"></xref>.</t>

              <t hangText="activity:object">When used to describe the <xref
              target="activity.object">Object of an Activity Construct</xref>,
              an Object Construct is represented using the <spanx
              style="verb">activity:object</spanx> element as defined in <xref
              target="xml.object"></xref>.</t>

              <t hangText="activity:target">When used to describe the <xref
              target="activity.target">Target of an Activity Construct</xref>,
              an Object Construct is represented using the <spanx
              style="verb">activity:target</spanx> element as defined in <xref
              target="xml.target"></xref>.</t>

              <t hangText="other elements">Other specifications or object
              types may define additional elements that can be used to
              represent objects.</t>
            </list></t>

          <t>The element used to represent the Object MAY have additional
          attributes and child elements that represent properties defined by
          the Object Type of the Object or by other extensions. These
          extensions are defined by the Atom representation provided for the
          Object Type or extension.</t>
        </section>

        <section anchor="atom.object.components"
                 title="Common Representation for Object Construct Components">
          <t>Unless specified otherwise, the components of an Object Construct
          are represented using child elements of the representative element
          as follows, regardless of the type of element used to describe the
          Object Construct:</t>

          <t><list style="hanging">
              <t hangText="ID">The <xref target="object.id">ID</xref> of the
              Object Construct is represented using the <spanx style="verb">atom:id</spanx>
              element, as defined in section 4.2.6 of <xref
              target="RFC4287"></xref>.</t>

              <t hangText="Name">The <xref target="object.name">name</xref> of
              the Object Construct is represented using the <spanx
              style="verb">atom:title</spanx> element, as defined in section
              3.2.1 of <xref target="RFC4287"></xref>.</t>

              <t hangText="Summary">The <xref
              target="object.summary">summary</xref> of the Object Construct
              is represented using the <spanx style="verb">atom:summary</spanx>
              element, as defined in section 4.2.13 of <xref
              target="RFC4287"></xref>).</t>

              <t hangText="Representative Image">The <xref
              target="object.image">representative image</xref> of the Object
              Construct is represented by the first <spanx style="verb">atom:link</spanx>
              element whose rel attribute value is "preview" and a whose type
              attribute value is an image media type.</t>

              <t hangText="Permalink URL">The <xref
              target="object.url">permalink URL</xref> of the Object
              Construct is represented by the href attribute of an <spanx
              style="verb">atom:link</spanx> element, whose rel attribute
              value is "alternate" and whose type attribute value is
              "text/html".</t>

              <t hangText="Object Type">The <xref
              target="object.type">object type URL</xref> of the Object
              Construct is represented by an <spanx style="verb">activity:object-type</spanx>
              element as defined in <xref
              target="xml.object-type"></xref>.</t>
            </list></t>
        </section>

        <section anchor="atom.object.author"
                 title="Object represented as atom:author">
          <t>When used to describe the <xref target="activity.actor">Actor of
          an Activity</xref>, an Object Construct is represented using the
          <spanx style="verb">atom:author</spanx> element (see section 4.2.1
          of <xref target="RFC4287"></xref>). The components of the Object
          Construct are represented using child elements as defined in <xref
          target="atom.object.components"></xref>, with the following
          exceptions:</t>

          <t><list style="hanging">
              <t hangText="Name">The name of the Object Construct is
              represented using the <spanx style="verb">atom:name</spanx>
              element, as defined in section 3.2.1 of <xref
              target="RFC4287"></xref>.</t>

              <t hangText="Permalink URL">The URL of the Object Construct is
              represented by the href attribute of an <spanx style="verb">atom:link</spanx>
              element, whose rel attribute value is "alternate" and a whose
              type attribute value is "text/html". If no such <spanx
              style="verb">atom:link</spanx> element is present, consumers
              SHOULD accept the content of the <spanx style="verb">atom:uri</spanx>
              element as representing the Object Permalink URL.</t>
            </list></t>
        </section>
      </section>
    </section>

    <section anchor="rss" title="RSS 2.0 Representation">
      <t>Activities can be represented in an RSS 2.0 document, as defined
      by <xref target="RSS2"></xref>, using a combination of conventions and
      custom extension elements. An activity is represented using an RSS
      "item" element. The RSS serialization only supports a subset of the
      activity data model allowing descriptions of simple activities that have
      only a verb and an object. This serialization is optimized for posting
      activities describing the creation of new objects. Publishers with a
      need for representing other fields that are not catered for by this
      serialization are recommended to use the Atom serialization instead for
      best results. This RSS serialization is defined only as a means for
      those already publishing streams of objects as RSS to produce minimally
      useful lists of activities for activity-aware consumers.</t>

      <t>A specific RSS document has a single activity actor that applies to
      all activities it represents. This actor has no known id, name, url or
      object type but it is assumed that all activities in the feed share the
      same actor and therefore consumers MAY use information obtained from
      another source, such as the user account which is assumed to be the
      subject of the feed, to populate these properties.</t>

      <section anchor="rss.activity"
               title="Activity Construct Represented as RSS &quot;item&quot;">
        <t>In this section, "the item" refers to the RSS "item" element which
        is representing the activity.</t>

        <t>An RSS "item" element represents exactly one Activity Construct in
        terms of its object. The item actually directly represents both the
        Object Construct that is the object of the Activity Construct and the
        Activity Construct itself via different subsets of the child
        elements.</t>

        <t>The components of the Activity Construct are represented in an RSS
        item as follows:</t>

        <t><list style="hanging">
            <t hangText="Actor">The <xref target="activity.actor">Actor</xref>
            of the Activity Construct is the feed-wide actor as described in
            <xref target="rss"></xref>.</t>

            <t hangText="Object">The <xref
            target="activity.object">Object</xref> of the Activity Construct
            is represented by the item itself. The representation of an Object
            Construct as an RSS item element is defined in <xref
            target="rss.object"></xref>.</t>

            <t hangText="Target">The Activity Construct does not have a <xref
            target="activity.target">Target</xref>.</t>

            <t hangText="Verb">The <xref target="activity.verb">verb
            URI</xref> of the Activity Construct is represented by an <spanx
            style="verb">activity:verb</spanx> child element as defined in
            <xref target="xml.verb"></xref>. If the item has no
            <spanx style="verb">activity:verb</spanx> child elements then the
            Activity Construct has only the "Post" verb as defined in <xref
            target="post"></xref>.</t>

            <t hangText="Time">The <xref target="activity.time">Time</xref> of
            the Activity Construct is represented by the
            <spanx style="verb">pubDate</spanx> child element of the item, as
            defined in <xref target="RSS2"></xref>.</t>

            <t hangText="Title">The Activity Construct does not have a <xref
            target="activity.title">Title</xref>.</t>

            <t hangText="Summary">The Activity Construct does not have a <xref
            target="activity.summary">Summary</xref>.</t>
          </list></t>
      </section>

      <section anchor="rss.object"
               title="Object Construct Represented as RSS &quot;item&quot;">
        <t>The components of an Object Construct are represented using child
        elements of an RSS <spanx style="verb">item</spanx> element as
        follows:</t>

        <t><list style="hanging">
            <t hangText="ID">The <xref target="object.id">ID</xref> of the
            Object Construct is represented using the RSS <spanx style="verb">guid</spanx>
            element, as defined in <xref target="RSS2"></xref>, if and only if
            its value conforms to the syntax of an IRI as defined in <xref
            target="RFC3987"></xref>. If the value is not a valid IRI then the
            Object Construct has no ID.</t>

            <t hangText="Name">The <xref target="object.name">name</xref> of
            the Object Construct is represented using the RSS <spanx
            style="verb">title</spanx> element, as defined in <xref
            target="RSS2"></xref>.</t>

            <t hangText="Summary">The Object Construct has no <xref
            target="object.summary">summary</xref>.</t>

            <t hangText="Representative Image">The <xref
            target="object.image">representative image</xref> of the Object
            Construct is represented by the href attribute of an <spanx
            style="verb">atom:link</spanx> element, whose rel attribute value
            is "preview" and a whose type attribute value is an appropriate
            image media type.</t>

            <t hangText="Permalink URL">The <xref
            target="object.url">permalink URL</xref> of the Object
            Construct is represented by the first RSS <spanx style="verb">link</spanx>
            child element, as defined in <xref target="RSS2"></xref>. If no
            such element is present, the value of the first <spanx
            style="verb">guid</spanx> child element that is marked as a
            permalink as defined in <xref target="RSS2"></xref> represents the
            Permalink URL. If neither element is present, the Object Construct
            has no Permalink URL.</t>

            <t hangText="Object Type">Each <xref
            target="object.type">object type URL</xref> of the Object
            Construct is represented by an <spanx style="verb">activity:object-type</spanx>
            element as defined in <xref
            target="xml.object-type"></xref>.</t>
          </list></t>
      </section>
    </section>

    <section anchor="xml" title="Elements used in XML Representations">
      <t>This specification defines several extension elements in the XML
      namespace <spanx style="verb">http://activitystrea.ms/spec/1.0/</spanx>.
      These elements are used in both the Atom and RSS serializations and MAY
      be used by other XML-based serializations of the activity streams data
      model defined by other specifications.</t>

      <section anchor="xml.object-type"
               title="The activity:object-type Element">
        <t>An <spanx style="verb">activity:object-type</spanx> element
        represents the Object Type of an Object Construct as defined
        in <xref target="object.type"></xref>. Its content is an IRI
        that identifies the object type.</t>
      </section>

      <section anchor="xml.verb" title="The activity:verb Element">
        <t>The <spanx style="verb">activity:verb</spanx> element represents the
        Verb of an Activity Construct as defined in <xref
        target="activity.verb"></xref>. Its content is an IRI that identifies
        the verb.</t>
      </section>

      <section anchor="xml.object"
               title="The activity:object Element">
        <t>An <spanx style="verb">activity:object</spanx> element represents
        the Object Construct that is the Object of an Activity Construct as
        defined in <xref target="activity.object"></xref>.</t>

        <t>The content model of an <spanx style="verb">activity:object</spanx>
        element includes the elements indicated in <xref
        target="atom.object.components"></xref>, with the meanings defined in that
        section, as well as any extension elements defined by the Atom
        serializations of the object type listed for the object.</t>
      </section>

      <section anchor="xml.target"
               title="The activity:target Element">
        <t>An <spanx style="verb">activity:target</spanx> element represents
        the Object Construct that is the Target of an Activity Construct as
        defined in <xref target="activity.target"></xref>.</t>

        <t>The content model of an <spanx style="verb">activity:target</spanx>
        element includes the elements indicated in <xref
        target="atom.object.components"></xref>, with the meanings defined in that
        section, as well as any extension elements defined by the Atom
        serializations of the object type listed for the object.</t>
      </section>
    </section>

    <section anchor="post" title="The &quot;Post&quot; Verb">
      <t>This specificiation defines one initial verb and defers to other
      specifications to define the full schema of verbs and object types.</t>

      <t>The "Post" verb describes the act of authoring an object and then
      publishing it online. The verb URI for the "Post" verb is <spanx
      style="verb">http://activitystrea.ms/schema/1.0/post</spanx>.</t>

      <t>The actor of an Activity Construct using the "Post" verb is an Object
      Construct representing the person or object that authored and posted the
      item represented by the object of the Activity Construct.</t>

      <t>The target of the Activity Construct, if present, represents the item
      into which the object is posted. For example, this could represent a
      blog that the author has posted in.</t>

      <t>It is not appropriate to use the target of the Activity Construct to
      represent an Object Construct that this new Object Construct is posted
      in reply to. Instead, this SHOULD be represented as the In Reply To
      Object component of the new object.</t>
    </section>

    <section anchor="security" title="Security Considerations">
      <t>As this specification defines an extension to the Atom Syndication
      Format, it is subject to the same security considerations defined in
      <xref target="RFC4287"></xref>.</t>

      <t>Publishers or Consumers implementing Activity Streams as a stream of
      public data may also want to consider the potential for unsolicited
      commercial or malicious content and should take preventative measures to
      recognize such content and either identify it or not include it in their
      stream implementations.</t>

      <t>Publishers should take reasonable measures to make sure potentially
      malicious user input such as cross-site scripting attacks are not
      included in the Activity Streams data they publish.</t>

      <t>Consumers that re-emit ingested content to end-users MUST take
      reasonable measures if emitting ingested content to make sure
      potentially malicious ingested input is not re-emitted.</t>

      <t>Consumers that re-emit ingested content for crawling by search
      engines should take reasonable measures to limit any use of their site
      as a Search Engine Optimization loophole. This may include converting
      un-trusted hyperlinks to text or including a rel="nofollow"
      attribute.</t>
    </section>

    <section anchor="iana" title="IANA Considerations">
      <t>None.</t>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <reference anchor="RFC4287">
        <front>
          <title>The Atom Syndication Format</title>

          <author fullname="Mark Nottingham" initials="M."
                  surname="Nottingham">
            <organization></organization>
          </author>

          <author fullname="Robert Sayre" initials="R." surname="Sayre">
            <organization></organization>
          </author>

          <date month="December" year="2005" />
        </front>
      </reference>

      <reference anchor="RFC2119">
        <front>
          <title>Key words for use in RFCs to Indicate Requirement
          Levels</title>

          <author fullname="Scott Bradner" initials="S." surname="Bradner">
            <organization></organization>
          </author>

          <date month="March" year="1997" />
        </front>
      </reference>

      <reference anchor="RFC3986">
        <front>
          <title>Uniform Resource Identifiers (URI): Generic Syntax</title>

          <author fullname="Tim Berners-Lee" initials="T."
                  surname="Berners-Lee">
            <organization></organization>
          </author>

          <author fullname="Roy Fielding" initials="R." surname="Fielding">
            <organization></organization>
          </author>

          <author fullname="Larry Masinter" initials="L." surname="Masinter">
            <organization></organization>
          </author>

          <date month="January" year="2005" />
        </front>
      </reference>

      <reference anchor="RFC3987">
        <front>
          <title>Internationalized Resource Identifiers (IRIs)</title>

          <author fullname="Martin Duerst" initials="M." surname="Duerst">
            <organization></organization>
          </author>

          <author fullname="Michel Suignard" initials="M." surname="Suignard">
            <organization></organization>
          </author>

          <date month="January" year="2005" />
        </front>
      </reference>

      <!--
      <reference anchor="RFC3339">
        <front>
          <title>Date and Time on the Internet: Timestamps</title>

          <author fullname="Graham Klyne" initials="G." surname="Klyne">
            <organization></organization>
          </author>

          <date month="July" year="2002" />
        </front>
      </reference>
      -->

      <reference anchor="RSS2" target="http://www.rssboard.org/rss-2-0-11">
        <front>
          <title>RSS 2.0 Specification</title>

          <author fullname="RSS Advisory Board">
            <organization></organization>
          </author>

          <date day="30" month="March" year="2009" />
        </front>
      </reference>

      <reference anchor="xml-names">
        <front>
          <title>Namespaces in XML 1.0 (Third Edition)</title>

          <author fullname="Tim Bray" initials="T." surname="Bray">
            <organization></organization>
          </author>

          <date day="8" month="December" year="2009" />
        </front>
      </reference>

      <reference anchor="xml-infoset">
        <front>
          <title>XML Information Set (Second Edition)</title>

          <author fullname="John Cowan" initials="J." surname="Cowan">
            <organization></organization>
          </author>

          <date day="4" month="February" year="2004" />
        </front>
      </reference>
    </references>

    <section anchor="acknowledgements" title="Acknowledgements">
      <t>...</t>
    </section>

    <section anchor="examples" title="Examples">
      <t>This appendix is non-normative.</t>

      <section anchor="examples.full" title="Full Activity Entry Examples">
        <figure anchor="examples.full.simple">
          <preamble>A typical activity entry:</preamble>

          <artwork><![CDATA[
<entry xmlns="http://www.w3.org/2005/Atom"
       xmlns:activity="http://activitystrea.ms/spec/1.0/">
  <id>tag:photopanic.example.com,2009:activity/4859/4352</id>
  <title>Geraldine posted a Photo on PhotoPanic</title>
  <published>2009-11-02T15:29:00Z</published>
  <link rel="alternate" type="text/html"
        href="http://example.com/geraldine/activities/4352" />
  <activity:verb>post</activity:verb>
  <activity:object>
    <id>tag:photopanic.example.com,2009:photo/4352</id>
    <title>My Cat</title>
    <published>2009-11-02T15:29:00Z</published>
    <link rel="alternate" type="text/html"
          href="http://example.com/geraldine/photos/4352" />
    <activity:object-type>
      tag:atom-activity.example.com,2009:photo
    </activity:object-type>
  </activity:object>
  <content type="html">
    &lt;p&gt;Geraldine posted a Photo on PhotoPanic&lt;/p&gt;
    &lt;img src="/geraldine/photos/4352.jpg"&gt;
  </content>
</entry>
]]></artwork>

          <postamble>This example shows a typical activity entry using the
          post verb defined by this specification and a hypothetical "photo"
          object type. It also demonstrates the use of
          <spanx style="verb">atom:title</spanx> and
          <spanx style="verb">atom:content</spanx> to provide fallback content
          for feed processors that do not support activity extensions. An
          activity stream application might render this entry into the sentence
          "Geraldine posted a photo titled 'My Cat'", with the photo title
          presented as a link.</postamble>
        </figure>

        <figure anchor="examples.full.complex">
          <preamble>A slightly more complex activity entry:</preamble>
          <artwork><![CDATA[
<entry xmlns="http://www.w3.org/2005/Atom"
       xmlns:activity="http://activitystrea.ms/spec/1.0/">
  <id>tag:photopanic.example.com,2009:/activity/4859/1643</id>
  <title>Geraldine posted a photo to the My Pets album.</title>
  <published>2009-06-21T00:28:35Z</published>
  <link rel="alternate" type="text/html"
        href="http://example.com/geraldine/activities/1643" />
  <author>
    <name>Geraldine</name>
    <uri>http://example.com/geraldine</uri>
    <id>tag:photopanic.example.com,2009:person/4859</id>
    <activity:object-type>
      tag:atom-activity.example.com,2009:person
    </activity:object-type>
    <link rel="alternate" type="text/html"
          href="http://example.com/geraldine" />
  </author>
  <activity:object>
    <id>tag:photopanic.example.com,2009:photo/1643</id>
    <title>My Cat</title>
    <link rel="alternate" type="text/html"
          href="/geraldine/photos/1643" />
    <link rel="preview" type="image/jpeg"
          href="/geraldine/photos/1643/thumb.jpg" />
    <link rel="enclosure" type="image/jpeg"
          href="/geraldine/photos/1643/full.jpg" />
    <activity:object-type>
      tag:atom-activity.example.com,2009:photo
    </activity:object-type>
  </activity:object>
  <activity:target>
    <id>tag:photopanic.example.com,2009:photo-album/2519</id>
    <title>My Pets</title>
    <link rel="alternate" type="text/html"
      href="/geraldine/albums/pets" />
    <activity:object-type>
      tag:atom-activity.example.com,2009:photo-album
    </activity:object-type>
  </activity:target>
  <content type="xhtml">...</content>
</entry>
]]></artwork>

          <postamble>This example demonstrates the use of the actor,
          verb, object and target elements.</postamble>
        </figure>
      </section>

      <section anchor="examples.implied" title="Implied Activity Entry Example">
        <figure>
          <preamble>A simple implied activity entry:</preamble>

          <artwork><![CDATA[
<entry xmlns="http://www.w3.org/2005/Atom"
       xmlns:activity="http://activitystrea.ms/spec/1.0/">
  <id>tag:photopanic.example.com,2009:photo/4352</id>
  <title>My Cat</title>
  <published>2009-11-02T15:29:00Z</published>
  <link rel="alternate" type="text/html"
        href="http://example.com/geraldine/photos/4352" />
  <activity:object-type>
    tag:atom-activity.example.com,2009:photo
  </activity:object-type>
</entry>
]]></artwork>

          <postamble>This example shows the same activity from
          <xref target="examples.full"></xref>, but represented using the
          implied activity shorthand.  Note that some of the components of the
          Activity Construct, such as title and summary, are not supported by
          this representation.</postamble>
        </figure>
      </section>
    </section>
  </back>
</rfc>
<!-- vim: set expandtab sw=2 ts=2: -->
